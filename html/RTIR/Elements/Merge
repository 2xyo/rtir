%# BEGIN LICENSE BLOCK
%# 
%# Copyright (c) 1996-2002 Jesse Vincent <jesse@bestpractical.com>
%# 
%# (Except where explictly superceded by other copyright notices)
%# 
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org
%# 
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%# 
%# 
%# Unless otherwise specified, all modifications, corrections or
%# extensions to this work which alter its source code become the
%# property of Best Practical Solutions, LLC when submitted for
%# inclusion in the work.
%# 
%# 
%# END LICENSE BLOCK
<& /Elements/ListActions, actions => \@results &>

<form action="Merge.html" method="post">
<input type="hidden" name="id" value="<%$Ticket->id%>">
<input type="hidden" name="<%$Ticket->Id%>-MergeInto">
%if ($ticketcount && !  $ARGS{'HideResults'}) {
<TABLE WIDTH=100% border=0 cellpadding=2 CELLSPACING=0>
<& /RTIR/Elements/TicketHeader, check => "check", %ARGS &>
% my $i;
%while (my $Ticket = $session{'tickets'}->Next) {
% next unless ($Ticket->Id ne $id);
% $i++;
<& /RTIR/Elements/TicketRow, Type => $Type, Ticket => $Ticket, i=> $i, check => "radio", %ARGS &>
% }
</TABLE>
<div align=center>
<font size=2>
<a href="<%$RT::WebPath.$Path%>?id=<%$id%>&GotoPage=1"><&|/l&>First page</&></a>
&nbsp;&nbsp;
%  if ( $session{'tickets'}->FirstRow >= $session{'tickets_rows_per_page'}-1 ) {
<a href="<%$RT::WebPath.$Path%>?id=<%$id%>&GotoPage=Prev">&lt;<&|/l&>Previous page</&></a>
&nbsp;&nbsp;
%  }                                                                           
%  if ( $session{'tickets'}->FirstRow + $session{'tickets_rows_per_page'} < $ticketcount ) {                                                               
<a href="<%$RT::WebPath.$Path%>?id=<%$id%>&GotoPage=Next"><&|/l&>Next page</&>&gt;</a>
%  }

%#&nbsp;&nbsp;<form method=get action="<%$RT::WebPath.$Path%>"><&|/l&>Goto page</&> <input name=GotoPage size=2></form>
</font>
</div>
<!--<div align=right>-->
<table width="100%" border=0 cellpadding=3 CELLSPACING=1>
<tr>
<td align=left>
(<&|/l, ($session{'tickets'}->FirstRow+1), ($session{'tickets'}->FirstRow() + $session{'tickets'}->RowsPerPage()  ) &>[_1] - [_2] shown</&>)
</td>
<td align=right>

<!--</div>-->
</td>
</tr>
</table>

% }

<& /Elements/Submit, Caption=> loc('Merge into selected Ticket') &>
</form>

<HR>
<TABLE WIDTH="100%">
<TR>
<TD VALIGN="TOP">
<& /Elements/TitleBoxStart, title => loc('Current search criteria')&>

<& /RTIR/Elements/SearchCriteria, Path => $Path, %ARGS &>

<& /Elements/TitleBoxEnd &>
</TD>
<TD>

<& /RTIR/Elements/PickRestriction, Queue => $ARGS{'ValueOfQueue'}, %ARGS &>

</TD>
</TR>
</TABLE>

<%INIT>
my $Ticket = LoadTicket($id);
my ($title, $ticketcount);
$session{'i'}++;
my ($bgcolor, @results);
if ($session{'tickets'}) {
    if ($ARGS{'DeleteRestriction'}) {
	    $session{'tickets'}->DeleteRestriction($ARGS{'DeleteRestriction'});
    }
    if ( ($ARGS{'ClearRestrictions'}) || ($ARGS{'NewSearch'}) ) {
	    $session{'tickets'}->ClearRestrictions;
	}	
}
   ProcessSearchQuery(ARGS=>\%ARGS);
   $session{'tickets'}->RedoSearch();
   if ( $session{'tickets'}->DescribeRestrictions()) {
       $ticketcount = $session{tickets}->Count();
        $title = loc('Found [quant,_1,incident]', $ticketcount);
    } else {
        $title = loc("Find incidents");
   }

# Iterate through the ARGS hash and remove anything with a null value.
map ($ARGS{$_} =~ /^$/ && (delete $ARGS{$_}), keys %ARGS);

my @cols = qw(id Status Priority Subject QueueObj->Name OwnerObj->Name RequestorAddresses DueAsString );

Abort(loc("No search to operate on.")) unless ($session{'tickets'});

my $merge = $ARGS{'SelectedTicket'};
my $MergeTicket;

if ($merge) {
  $ARGS{$id.'-MergeInto'} = $merge;
  $MergeTicket = LoadTicket($merge);
  if ($MergeTicket->QueueObj->id ne $Ticket->QueueObj->id) {
    push @results, loc("Merge failed: Ticket #[_1] is not the right type", $MergeTicket->Id);
  } else {
    @results = ProcessTicketLinks( TicketObj => $Ticket, ARGSRef => \%ARGS);
  }
}
    
</%INIT>

<%ARGS>
$id => undef
$Type => undef
$Path => undef
</%ARGS>
