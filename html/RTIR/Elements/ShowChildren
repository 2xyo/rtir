%# BEGIN LICENSE BLOCK
%# 
%# Copyright (c) 1996-2002 Jesse Vincent <jesse@bestpractical.com>
%# 
%# (Except where explictly superceded by other copyright notices)
%# 
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org
%# 
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%# 
%# 
%# Unless otherwise specified, all modifications, corrections or
%# extensions to this work which alter its source code become the
%# property of Best Practical Solutions, LLC when submitted for
%# inclusion in the work.
%# 
%# 
%# END LICENSE BLOCK

% if( $ShowStatesSelector ) {
%   foreach my $s( @possible_states ) {
%       my $checked = (grep { $_ eq $s } @States)? 'checked': '';
<input type="checkbox" name="States" value="<% $s %>" <% $checked %> />&nbsp;<% $s %>
%   }
<& /Elements/Submit, Name => 'RefineStates', Label => loc('Filter states') &>
% }

% if ($Delete) {
<i><% loc("Check box to unlink") %></i><br />
% }
<& /Elements/TicketList, 
   Collection     => $children,
   DisplayFormat  => ($Delete? "__RTIR_Check__, $Format": $Format),
   Format         => $Format,
   Rows           => $Rows,
   ShowHeader     => $ShowHeader,
   OrderBy        => $OrderBy,
   ShowNavigation => 0,
&>
% unless( $children->Count ) {
%   if ($Queue) {
        <i>(<% loc("no [_1]", $Queue) %>)</i>
%   } else {
        <i>(<% loc("no children") %>)</i>
%   }
% }
<br />

% if( $FullList && $Rows > 0 && $children->Count >= $Rows ) {
<a href="<% $FullList %>"><i><% loc("More... ([_1] total)", $children->Count) %></i></a><br />
% }

<%INIT>
unless( @States ) {
    @States = ( RT::IR::States( Queue => $Queue ), 'resolved', 'removed' );
}
my @possible_states = RT::IR::States( Queue => $Queue, Inactive => 1 );
my $Type = RT::IR::TicketType( Queue => $Queue );

$Format ||= RT->Config->Get('RTIRSearchResultFormats')->{'Child' . $Type};

my $children = RT::Tickets->new( $session{'CurrentUser'} );
$children->FromSQL( $m->comp( '/RTIR/Elements/ChildrenQuery',
                              Queue  => $Queue,
                              Ticket => $Ticket,
                              States => [@States],
                            )
                  );

</%INIT>

<%ARGS>
$Format => undef
$Queue => undef
$Ticket => undef
$OrderBy => 'Due'
$Rows => 0
$Delete => 0
$FullList => undef
@States => ()
$ShowHeader => 0
$ShowStatesSelector => 0
</%ARGS>
