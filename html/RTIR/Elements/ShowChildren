%# BEGIN LICENSE BLOCK
%# 
%# Copyright (c) 1996-2002 Jesse Vincent <jesse@bestpractical.com>
%# 
%# (Except where explictly superceded by other copyright notices)
%# 
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org
%# 
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%# 
%# 
%# Unless otherwise specified, all modifications, corrections or
%# extensions to this work which alter its source code become the
%# property of Best Practical Solutions, LLC when submitted for
%# inclusion in the work.
%# 
%# 
%# END LICENSE BLOCK
% if ($Delete) {
<i><%loc("Check box to unlink")%></i><br>
% }

<& /Elements/TicketList, 
   Collection => $MyTickets,
   Format => $Format,
   Rows => $Rows,
   OrderBy => $OrderBy,
   ShowHeader => 0,
   ShowNavigation => 0,
&>

<& /Elements/TicketList, 
   Collection     => $ClosedTickets,
   Format         => $Format,
   Rows           => $Rows,
   OrderBy        => 'Resolved',
   Order          => 'DESC',
   ShowHeader     => 0,
   ShowNavigation => 0,
&>

% if ($depth eq 1 and $MyTickets->Count eq 0) {
% if (defined $Queue) {
  <i>(<% loc("no [_1]", $Queue) %>)</i>
% } else {
  <i>loc("no children")</i>
% }
% } else {
% if (($Rows > 0) && ($MyTickets->Count >= $Rows)) {
% if (defined $FullList) {
<a href="<%$FullList%>"><i><%loc("More... ([_1] total)", $MyTickets->Count)%></i></a><br>
% }
% }
% }

<%INIT>
my ($Type, @states) = $m->comp("/RTIR/Elements/Type", Queue => $Queue);
$Format = $RT::RTIRSearchResultFormats->{'Child' . $Type};

my %seen = ();
@states = map lc, grep $_ && !$seen{$_}++, (@states, @AddStates);

if ($Delete) {
    $Format = "___RTIR_Check__, " . $Format;
}

if (!$BaseQuery) {
    $BaseQuery = $m->comp('/RTIR/Elements/BaseQuery', Queue => $Queue);
}

$Query  = $m->comp('/RTIR/Elements/NewQuery', Queue => $Queue, states => [@states] );
$Query .= " AND MemberOf = " . $Ticket->Id;
$Query  = "$BaseQuery AND ( $Query )";

my $MyTickets = new RT::Tickets($session{'CurrentUser'});
$MyTickets->FromSQL($Query);

my $ClosedQuery = "MemberOf = ". $Ticket->Id ." AND Status = 'resolved'";
$ClosedQuery  = "$BaseQuery AND ( $ClosedQuery )";

my $ClosedTickets = new RT::Tickets($session{'CurrentUser'});
$ClosedTickets->FromSQL($ClosedQuery);

</%INIT>

<%ARGS>
$Query => undef
$BaseQuery => undef
$QueryString => undef
$Format => undef
$Queue => undef
$Ticket => undef
$OrderBy => 'Due'
$depth => 1
$Rows => 0
$Delete => 0
$FullList => undef
@AddStates => ()
</%ARGS>
