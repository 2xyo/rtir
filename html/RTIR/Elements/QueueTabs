%# BEGIN LICENSE BLOCK
%# 
%# Copyright (c) 1996-2002 Jesse Vincent <jesse@bestpractical.com>
%# 
%# (Except where explictly superceded by other copyright notices)
%# 
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org
%# 
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%# 
%# 
%# Unless otherwise specified, all modifications, corrections or
%# extensions to this work which alter its source code become the
%# property of Best Practical Solutions, LLC when submitted for
%# inclusion in the work.
%# 
%# 
%# END LICENSE BLOCK
<& /Elements/Callback, Page => '/Ticket/Elements/Tabs', Ticket => $Ticket, actions=> $actions, tabs => $tabs, %ARGS &>
<& /RTIR/Elements/Tabs, 
    tabs => $tabs, 
    actions => $actions, 
    current_toptab => $current_toptab,
    current_tab => $mytab,
    current_subtab => $current_subtab,
    Title => $Title,
    QueryString => $QueryString,
&> 

<%INIT>

if( $QueryString =~ s/^&// ) {
    require Carp;
    Carp::cluck("queue string had leading &");
}

my ($Type) = $m->comp('/RTIR/Elements/Type', Queue => $QueueName);

my $EscapedQueueName = $m->comp('/Elements/QueryString', Queue => $QueueName );

my $tabs = {};
my $current_toptab = 'RTIR/Search/Results.html?'. $EscapedQueueName;

my ($actions, $mytab);
my $searchtabs = { } ;

if ( $Ticket && $Ticket->QueueObj->Name eq $QueueName ) {
        
    my $id = $Ticket->id;
    $mytab = "RTIR/Display.html?id=$id";

    if ( $session{'tickets'} ) {
        my $item_map = $session{'tickets'}->ItemMap;

        # Don't display prev links if we're on the first ticket
        if ( $item_map->{ $id }->{'prev'} ) {
            $searchtabs->{'_a'} = { class => "nav",
                                    path => "RTIR/Display.html?id=" . $item_map->{'first'},
                                    title => '<< ' . loc('First') };
            $searchtabs->{"_b"} = { class => "nav",
                                    path => "RTIR/Display.html?id=" . $item_map->{ $id }->{'prev'},
                                    title => '< ' . loc('Prev') };
        }

        # Don't display next links if we're on the last ticket
        if ( $item_map->{ $id }->{'next'} ) {
            $searchtabs->{'d'} = { class => "nav",
                                   path => "RTIR/Display.html?id=". $item_map->{ $id }->{'next'},
                                   title => loc('Next') . ' >' };
            $searchtabs->{'e'} = { class => "nav",
                                   path => "RTIR/Display.html?id=" . $item_map->{'last'},
                                   title => loc('Last') . ' >>' };
        }
    }
    
    $tabs->{'this'} = { class => "currentnav",
                        path  => "RTIR/Display.html?id=$id",
                        title => loc("$Type #[_1]", $id),
                        current_subtab => $current_subtab };
    
    my $ticket_page_tabs = {
        _A => { title => loc('Display'),
                path  => "RTIR/Display.html?id=$id" }
    };

    # only show edit option if they can do it
    if ( $Ticket->CurrentUserHasRight( 'ModifyTicket' ) ) {
        $ticket_page_tabs->{'_E'} = { title => loc('Edit'),
                path  => "RTIR/Edit.html?id=$id" };

        $ticket_page_tabs->{'_F'} = { title => loc('Split'),
                path  => "RTIR/Split.html?Ticket=$id" };

        $ticket_page_tabs->{'_G'} = { title => loc('Merge'),
                path  => "RTIR/Merge.html?id=$id&$QueryString",
                separator => 1  };

        foreach my $key (keys %$appendtabs) {
            $ticket_page_tabs->{ $key }->{'title'} = $appendtabs->{ $key }->{'title'};
            $ticket_page_tabs->{ $key }->{'path'} = $appendtabs->{ $key }->{'path'};
        }
    }

    foreach my $tab ( sort keys %$ticket_page_tabs ) {
        next unless $ticket_page_tabs->{ $tab }->{'path'} eq $current_subtab;

        $ticket_page_tabs->{ $tab }->{'subtabs'} = $subtabs;
        $tabs->{'this'}->{'current_subtab'} = $ticket_page_tabs->{ $tab }->{'path'};
    }
    $tabs->{'this'}->{'subtabs'} = $ticket_page_tabs;

    ### Reply ###
    if (    $Ticket->CurrentUserHasRight('ModifyTicket')
         or $Ticket->CurrentUserHasRight('ReplyToTicket') ) {

        if ($Type eq 'Incident') {
            $actions->{'A'} = {
                title => loc('Reply to Reporters'),
                path  => "RTIR/Incident/Reply.html?DefaultStatus=stalled&id=$id",
            };
            $actions->{'Ab'} = {
                title => loc('Reply to All'),
                path  => "RTIR/Incident/Reply.html?DefaultStatus=stalled&id=$id&All=1",
            };
        } else {
            $actions->{'A'} = {
                title => loc('Reply'),
                path  => "RTIR/Update.html?Action=Respond&DefaultStatus=stalled&id=$id",
            };
        }
    }

    if ( $Ticket->CurrentUserHasRight('ModifyTicket') ) {
        if ( $Type eq 'Report' ) {
            if ( $Ticket->QueueObj->IsActiveStatus( $Ticket->Status ) ) {
                my $state = $Ticket->FirstCustomFieldValue('_RTIR_State');
                if ($state ne 'new') {
                    $actions->{'Ac'} = {
                        path => "RTIR/Update.html?Action=Comment&DefaultStatus=resolved&id=$id",
                        title => loc('Resolve'),
                    };
                    $actions->{'Acc'} = {
                        path => "RTIR/Display.html?Status=resolved&Quick=1&id=$id",
                        title => loc('Quick Resolve'),
                    };
                }
                $actions->{'B'} = {
                    path => "RTIR/Display.html?Status=rejected&Quick=1&id=$id",
                    title => loc('Quick Reject'),
                };
                $actions->{'Bb'} = {
                    path => "RTIR/Update.html?Action=Comment&DefaultStatus=rejected&id=$id",
                    title => loc('Reject'),
                };
            }
        }
        elsif ( $Type eq 'Incident' ) {
            if ( $Ticket->QueueObj->IsActiveStatus( $Ticket->Status ) ) {
                $actions->{'Ac'} = {
                    path  => "RTIR/Incident/Reply.html?Action=Comment&DefaultStatus=resolved&id=$id&All=1",
                    title => loc('Resolve'),
                };
                $actions->{'Acc'} = {
                    path => "RTIR/Display.html?Status=resolved&Quick=1&id=$id",
                    title => loc('Quick Resolve'),
                };
                $actions->{'B'} = {
                    path  => "RTIR/Incident/Reply.html?Action=Comment&DefaultStatus=rejected&id=$id&All=1",
                    title => loc('Abandon'),
                };
            }
        }

        ### Open ###
        if ( $Ticket->Status eq 'resolved' or $Ticket->Status eq 'rejected' ) {
            $actions->{'C'} = { path => "RTIR/Display.html?Status=open&id=$id",
                                title => loc('Open') };
        }
    }

    if ( $Ticket->CurrentUserHasRight('OwnTicket') ) {
        if ( $Ticket->Owner == $RT::Nobody->id ) {
            $actions->{'D'} = { path => "RTIR/Display.html?Action=Take&id=$id",
                                title => loc('Take') };
        }
        elsif ( $Ticket->Owner != $session{CurrentUser}->id ) {
            $actions->{'E'} = { path => "RTIR/Display.html?Action=Steal&id=$id",
                                title => loc('Steal') };
        }
    }

    if (    $Ticket->CurrentUserHasRight('ModifyTicket')
         or $Ticket->CurrentUserHasRight('CommentOnTicket') ) {
        $actions->{'F'} = { title => loc('Comment'),
                            path  => "RTIR/Update.html?Action=Comment&id=$id" };
    }
} else {
    $mytab = $current_tab;
}

my $refinetabs = { };
$refinetabs->{'_a'} = {
    class => "nav",
    path => "RTIR/Search/Refine.html?ResultPage=/RTIR/Search/Results.html&$EscapedQueueName&$QueryString",
    title => loc('Refine'),
};

$tabs->{"A"} = { path      => "RTIR/Create.html?$EscapedQueueName",
                 title     => loc("New $Type") };

$tabs->{"g"} = { path      => "RTIR/Search/Results.html?$EscapedQueueName&$QueryString",
                 title     => loc('Results'),
                 separator => 1,
                 subtabs   => $refinetabs };

if ($Type eq 'Report') {
    $tabs->{"h"} = { path      => 'RTIR/Report/BulkReject.html',
                     title     => loc('Bulk Reject'),
                     separator => 1 };
}
elsif ( $Type eq 'Incident' ) {
    if( $Ticket && $Ticket->QueueObj->Name ne 'Incidents') {
        my $childq = $Ticket->QueueObj->Name;
        my ($childtype) = $m->comp( '/RTIR/Elements/Type', Queue => $childq );
        
        $tabs->{'h'} = { title     => loc( 'Link [_1] #[_2]', $childtype, $Ticket->Id ),
                         path      => "RTIR/Incident/LinkToIncident.html?id=". $Ticket->Id,
                         separator => 1 };
    }
    $tabs->{'k'} = { path      => 'RTIR/Incident/BulkAbandon.html',
                     title     => loc('Bulk Abandon'),
                     separator => 1 };
}

foreach ( keys %{$tabs} ) {
    if ( $tabs->{ $_ }->{'path'} eq $current_tab ) {
        $tabs->{ $_ }->{'subtabs'} = $subtabs;
    }
}

</%INIT>
<%ARGS>
$Ticket => undef
$subtabs => undef
$appendtabs => undef
$current_tab => undef
$current_subtab => undef
$Title => ''
$QueryString => ''
$QueueName => 'Incident Reports'
</%ARGS>
