%# BEGIN LICENSE BLOCK
%# 
%# Copyright (c) 1996-2002 Jesse Vincent <jesse@bestpractical.com>
%# 
%# (Except where explictly superceded by other copyright notices)
%# 
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org
%# 
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%# 
%# 
%# Unless otherwise specified, all modifications, corrections or
%# extensions to this work which alter its source code become the
%# property of Best Practical Solutions, LLC when submitted for
%# inclusion in the work.
%# 
%# 
%# END LICENSE BLOCK
<& /Elements/ListActions, actions => \@results &>

<FORM ACTION="<%$RT::WebPath%>/RTIR/<%$Type%>/Create.html" METHOD="POST" ENCTYPE="multipart/form-data">
<INPUT TYPE=HIDDEN Name="id" VALUE="new">
<INPUT TYPE=HIDDEN NAME=Queue Value="<%$QueueObj->Name%>">
<INPUT TYPE=HIDDEN NAME=Status Value="<%$ARGS{Status}||'open'%>">
<INPUT TYPE=HIDDEN NAME=Type Value="<%$ARGS{Type}%>">
<INPUT TYPE=HIDDEN NAME=Incident Value="<%$ARGS{Incident}%>">
% my $parentvalue;
% if ($Incident) {
% $parentvalue = $Incident;
% } elsif ($TicketObj) {
%   $parentvalue = $TicketObj->Id;
%   my $count = 0;
%   my $incidents = $TicketObj->MemberOf;
%   while (my $link = $incidents->Next) {
%     my $incident = $link->TargetObj;
%     if ($incident->QueueObj->Name eq 'Incidents') {
%       $count++;
%       $parentvalue = $parentvalue." ".$incident->Id;
%     }
%   }
% }
% if (defined $parentvalue) {
<input type=hidden name="new-MemberOf" VALUE="<%$parentvalue%>">
% }
<A NAME="top">

<& '/RTIR/'.$Type.'/Elements/CreateBasics', 
  Ticket => $TicketObj,
  QueueObj => $QueueObj, 
  IncidentObj => $IncidentObj,
  %ARGS &>
	
<& /Elements/Submit, Label => loc("Create")&>
</FORM>

<%INIT>
my $QueueObj = new RT::Queue($session{'CurrentUser'});
my $QueueName;
my $TicketObj = $ARGS{TicketObj};
my $IncidentObj;
my $Status = $ARGS{'Status'};

if ($Incident) {
  $IncidentObj = new RT::Ticket($session{'CurrentUser'});
  $IncidentObj = LoadTicket($Incident);
}

if ($Type eq "Investigation") {
  $Status = 'open';
  $QueueName = "Investigations";
} elsif ($Type eq "Block") {
  $Status = 'new';
  $QueueName = "Blocks";
} else {
  $QueueName = "Incident Reports";
}
$QueueObj->Load($QueueName) || Abort(loc("Queue could not be loaded."));

my $CFs = $QueueObj->CustomFields();

# {{{ deal with deleting uploaded attachments
foreach my $key (keys %ARGS) {
    if ($key =~ m/^DeleteAttach-(.+)$/) {
	delete $session{'Attachments'}{$1};
    }
    $session{'Attachments'} = { %{$session{'Attachments'} || {}} };
}

# {{{ store the uploaded attachment in session
if ($ARGS{'Attach'}) {			# attachment?
    $session{'Attachments'} = {} unless defined $session{'Attachments'};

     # strip leading directories
     $ARGS{'Attach'} =~ s#^.*[\\/]##;


    my $attachment = MakeMIMEEntity(
        Subject             => "$ARGS{'Attach'}",
        Body                => "",
        AttachmentFieldName => 'Attach'
    );
    $session{'Attachments'} = { %{$session{'Attachments'} || {}},
				$ARGS{'Attach'} => $attachment };
}
# }}}

# delete temporary storage entry to make WebUI clean
unless (keys %{$session{'Attachments'}} and $ARGS{'id'} eq 'new') {
    delete $session{'Attachments'};
}


# }}}

my $foo;

my @results;
if ((!exists $ARGS{'AddMoreAttach'}) && ($ARGS{'id'} eq 'new')) { # new ticket?
  if ($ARGS{'Requestors'}) {
    $m->comp('/RTIR/Elements/Display', %ARGS);
    $m->abort();
  } else {
    push @results, "Investigation launch failed: You must enter a correspondent.";
  }
}
</%INIT>

<%ARGS>
$DependsOn => undef
$DependedOnBy => undef
$QuoteTransaction => undef
$Incident => undef
$Type => "Report"
$Split => 0
</%ARGS>
